// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       String @id @default(uuid())
  email    String @unique
  password String
  role     Role // ADMIN, STUDENT

  student Student?
  admin   Admin?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Student {
  id          String       @id @default(uuid())
  name        String
  email       String       @unique
  userId      String       @unique
  user        User         @relation(fields: [userId], references: [id])
  transcripts Transcript[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Admin {
  id     String @id @default(uuid())
  name   String
  email  String @unique
  userId String @unique
  user   User   @relation(fields: [userId], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Transcript {
  id           String           @id @default(uuid())
  student      Student          @relation(fields: [studentId], references: [id])
  studentId    String
  academicYear String
  semester     String
  courses      Json // List of courses (name, code, grade, credits)
  status       TranscriptStatus @default(PENDING) // Pending, Approved, Rejected

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum Role {
  ADMIN
  STUDENT
}

enum TranscriptStatus {
  PENDING
  APPROVED
  REJECTED
}
