// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(uuid())
  email     String   @unique
  password  String
  role      Role     // ADMIN, STUDENT
  student   Student?
  admin     Admin?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Student {
  id          String      @id @default(uuid())
  name        String
  email       String      @unique
  userId      String      @unique
  user        User        @relation(fields: [userId], references: [id])
  transcripts Transcript[]
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
}

model Admin {
  id        String   @id @default(uuid())
  name      String
  email     String   @unique
  userId    String   @unique
  user      User     @relation(fields: [userId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Transcript {
  id        String   @id @default(uuid())
  studentId String
  student   Student  @relation(fields: [studentId], references: [id])
  courses   Course[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Course {
  id           String     @id @default(uuid())
  transcriptId String
  transcript   Transcript @relation(fields: [transcriptId], references: [id])
  courseName   String
  grade        String
  createdAt    DateTime   @default(now())
  updatedAt    DateTime   @updatedAt
}

enum Role {
  ADMIN
  STUDENT
}